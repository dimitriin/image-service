// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Image struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (m *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(m, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type ClearRequest struct {
	Image                *Image   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearRequest) Reset()         { *m = ClearRequest{} }
func (m *ClearRequest) String() string { return proto.CompactTextString(m) }
func (*ClearRequest) ProtoMessage()    {}
func (*ClearRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *ClearRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearRequest.Unmarshal(m, b)
}
func (m *ClearRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearRequest.Marshal(b, m, deterministic)
}
func (m *ClearRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearRequest.Merge(m, src)
}
func (m *ClearRequest) XXX_Size() int {
	return xxx_messageInfo_ClearRequest.Size(m)
}
func (m *ClearRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearRequest proto.InternalMessageInfo

func (m *ClearRequest) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

type ClearResponse struct {
	Image                *Image   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearResponse) Reset()         { *m = ClearResponse{} }
func (m *ClearResponse) String() string { return proto.CompactTextString(m) }
func (*ClearResponse) ProtoMessage()    {}
func (*ClearResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *ClearResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearResponse.Unmarshal(m, b)
}
func (m *ClearResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearResponse.Marshal(b, m, deterministic)
}
func (m *ClearResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearResponse.Merge(m, src)
}
func (m *ClearResponse) XXX_Size() int {
	return xxx_messageInfo_ClearResponse.Size(m)
}
func (m *ClearResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClearResponse proto.InternalMessageInfo

func (m *ClearResponse) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

type Ratio struct {
	W                    uint32   `protobuf:"varint,1,opt,name=w,proto3" json:"w,omitempty"`
	H                    uint32   `protobuf:"varint,2,opt,name=h,proto3" json:"h,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ratio) Reset()         { *m = Ratio{} }
func (m *Ratio) String() string { return proto.CompactTextString(m) }
func (*Ratio) ProtoMessage()    {}
func (*Ratio) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *Ratio) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ratio.Unmarshal(m, b)
}
func (m *Ratio) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ratio.Marshal(b, m, deterministic)
}
func (m *Ratio) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ratio.Merge(m, src)
}
func (m *Ratio) XXX_Size() int {
	return xxx_messageInfo_Ratio.Size(m)
}
func (m *Ratio) XXX_DiscardUnknown() {
	xxx_messageInfo_Ratio.DiscardUnknown(m)
}

var xxx_messageInfo_Ratio proto.InternalMessageInfo

func (m *Ratio) GetW() uint32 {
	if m != nil {
		return m.W
	}
	return 0
}

func (m *Ratio) GetH() uint32 {
	if m != nil {
		return m.H
	}
	return 0
}

type CropRequest struct {
	Image                *Image   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Ratio                *Ratio   `protobuf:"bytes,2,opt,name=ratio,proto3" json:"ratio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CropRequest) Reset()         { *m = CropRequest{} }
func (m *CropRequest) String() string { return proto.CompactTextString(m) }
func (*CropRequest) ProtoMessage()    {}
func (*CropRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *CropRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CropRequest.Unmarshal(m, b)
}
func (m *CropRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CropRequest.Marshal(b, m, deterministic)
}
func (m *CropRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CropRequest.Merge(m, src)
}
func (m *CropRequest) XXX_Size() int {
	return xxx_messageInfo_CropRequest.Size(m)
}
func (m *CropRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CropRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CropRequest proto.InternalMessageInfo

func (m *CropRequest) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *CropRequest) GetRatio() *Ratio {
	if m != nil {
		return m.Ratio
	}
	return nil
}

type CropResponse struct {
	Image                *Image   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CropResponse) Reset()         { *m = CropResponse{} }
func (m *CropResponse) String() string { return proto.CompactTextString(m) }
func (*CropResponse) ProtoMessage()    {}
func (*CropResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *CropResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CropResponse.Unmarshal(m, b)
}
func (m *CropResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CropResponse.Marshal(b, m, deterministic)
}
func (m *CropResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CropResponse.Merge(m, src)
}
func (m *CropResponse) XXX_Size() int {
	return xxx_messageInfo_CropResponse.Size(m)
}
func (m *CropResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CropResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CropResponse proto.InternalMessageInfo

func (m *CropResponse) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func init() {
	proto.RegisterType((*Image)(nil), "v1.Image")
	proto.RegisterType((*ClearRequest)(nil), "v1.ClearRequest")
	proto.RegisterType((*ClearResponse)(nil), "v1.ClearResponse")
	proto.RegisterType((*Ratio)(nil), "v1.Ratio")
	proto.RegisterType((*CropRequest)(nil), "v1.CropRequest")
	proto.RegisterType((*CropResponse)(nil), "v1.CropResponse")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xcf, 0x4e, 0x84, 0x30,
	0x10, 0xc6, 0xd3, 0x8d, 0xd5, 0x38, 0x5b, 0xe2, 0xda, 0x13, 0xd9, 0x8b, 0x5a, 0x2f, 0x9a, 0x18,
	0x14, 0x7c, 0x04, 0x4e, 0x9e, 0x4c, 0xea, 0x13, 0x20, 0x99, 0x00, 0x89, 0x52, 0x6c, 0x2b, 0xbc,
	0xbe, 0xe9, 0x14, 0x03, 0xb7, 0xe5, 0xf8, 0x7d, 0xfd, 0xcd, 0x37, 0x7f, 0x0a, 0x89, 0x43, 0x3b,
	0x76, 0x35, 0x66, 0x83, 0x35, 0xde, 0xc8, 0xdd, 0x98, 0xab, 0x3b, 0xe0, 0x6f, 0xdf, 0x55, 0x83,
	0x32, 0x85, 0x8b, 0xda, 0xf4, 0x1e, 0x7b, 0x9f, 0xb2, 0x5b, 0xf6, 0x20, 0xf4, 0xbf, 0x54, 0xcf,
	0x20, 0xca, 0x2f, 0xac, 0xac, 0xc6, 0x9f, 0x5f, 0x74, 0x5e, 0xde, 0x00, 0xef, 0x42, 0x09, 0x71,
	0xfb, 0xe2, 0x32, 0x1b, 0xf3, 0x8c, 0x32, 0x74, 0xf4, 0xd5, 0x0b, 0x24, 0x73, 0x81, 0x1b, 0x4c,
	0xef, 0xf0, 0x74, 0xc5, 0x3d, 0x70, 0x5d, 0xf9, 0xce, 0x48, 0x01, 0x6c, 0x22, 0x2a, 0xd1, 0x6c,
	0x0a, 0xaa, 0x4d, 0x77, 0x51, 0xb5, 0xea, 0x1d, 0xf6, 0xa5, 0x35, 0xc3, 0xd6, 0x31, 0x02, 0x60,
	0x43, 0x28, 0x25, 0xcc, 0x00, 0x75, 0xd1, 0xd1, 0xa7, 0xc5, 0x28, 0x70, 0xe3, 0x98, 0x45, 0x03,
	0x82, 0xf4, 0x47, 0x3c, 0xa3, 0x7c, 0x02, 0x4e, 0x8b, 0xca, 0x43, 0x40, 0xd7, 0x47, 0x3a, 0x5e,
	0xaf, 0x9c, 0x39, 0xfe, 0x11, 0xce, 0x42, 0x3b, 0x79, 0x45, 0x4f, 0xcb, 0x26, 0xc7, 0xc3, 0x62,
	0x44, 0xf4, 0xf3, 0x9c, 0x3e, 0xe8, 0xf5, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x88, 0xff, 0x83,
	0xb1, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ImageServiceClient is the client API for ImageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImageServiceClient interface {
	Clear(ctx context.Context, in *ClearRequest, opts ...grpc.CallOption) (*ClearResponse, error)
	Crop(ctx context.Context, in *CropRequest, opts ...grpc.CallOption) (*CropResponse, error)
}

type imageServiceClient struct {
	cc *grpc.ClientConn
}

func NewImageServiceClient(cc *grpc.ClientConn) ImageServiceClient {
	return &imageServiceClient{cc}
}

func (c *imageServiceClient) Clear(ctx context.Context, in *ClearRequest, opts ...grpc.CallOption) (*ClearResponse, error) {
	out := new(ClearResponse)
	err := c.cc.Invoke(ctx, "/v1.ImageService/Clear", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) Crop(ctx context.Context, in *CropRequest, opts ...grpc.CallOption) (*CropResponse, error) {
	out := new(CropResponse)
	err := c.cc.Invoke(ctx, "/v1.ImageService/Crop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImageServiceServer is the server API for ImageService service.
type ImageServiceServer interface {
	Clear(context.Context, *ClearRequest) (*ClearResponse, error)
	Crop(context.Context, *CropRequest) (*CropResponse, error)
}

// UnimplementedImageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedImageServiceServer struct {
}

func (*UnimplementedImageServiceServer) Clear(ctx context.Context, req *ClearRequest) (*ClearResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Clear not implemented")
}
func (*UnimplementedImageServiceServer) Crop(ctx context.Context, req *CropRequest) (*CropResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Crop not implemented")
}

func RegisterImageServiceServer(s *grpc.Server, srv ImageServiceServer) {
	s.RegisterService(&_ImageService_serviceDesc, srv)
}

func _ImageService_Clear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).Clear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ImageService/Clear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).Clear(ctx, req.(*ClearRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_Crop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CropRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).Crop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ImageService/Crop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).Crop(ctx, req.(*CropRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ImageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.ImageService",
	HandlerType: (*ImageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Clear",
			Handler:    _ImageService_Clear_Handler,
		},
		{
			MethodName: "Crop",
			Handler:    _ImageService_Crop_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
